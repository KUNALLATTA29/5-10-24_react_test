Que 2.Fetch all records from an API.Display a detailed view of a single record when a user clicks "View
Details".

Ans 2.


import { useState, useEffect } from "react"
import axios from 'axios'
import { LazyLoadImage } from 'react-lazy-load-image-component';
import 'react-lazy-load-image-component/src/effects/blur.css';
import { Link } from "react-router-dom";

export default function Data() {
    const [products, setproducts] = useState([]);
    const [search, setsearch] = useState('');
    const [sortdata, setsortdata] = useState('')
    const [rating,setrating] = useState([]);

    const fetch = async()=>{
        let response = await axios.get('https://dummyjson.com/products')
        setproducts(response.data.products); 
        console.log(response.data.products);
    }

    const filterData = () => {
        return products
            .filter((elem) => 
                elem.title.toLowerCase().includes(search.toLowerCase())
            )
            .filter((elem)=> rating.length === 0 || rating.includes(Math.round(elem.rating)))
            .sort(sortproducts);
    };

    const sortproducts = (a,b) => {
        if(sortdata === "ace"){
            return a.price - b.price;
        }else if(sortdata === "dec"){
            return b.price - a.price;
        }
        return 0;
    }


    const handleRating = (rat) => {
        setrating((prev) => 
            prev.includes(rat) ? prev.filter((r) => r !== rat) : [...prev, rat]
        );
    };

    useEffect(()=>{
        fetch();
    },[]);
  return (
    <div className="container data">
        <input
            type="text"
            placeholder="search the text"
            value={search}
            onChange={(e) => setsearch(e.target.value)}
        />
        <div>
            <button onClick={()=>setsortdata("ace")}>low to high</button>
            <button onClick={()=>setsortdata("dec")}>high to low</button>
        </div>
        <div className="rating-filters">
                {[1, 2, 3, 4, 5].map((rat) => (
                    <label key={rat}>
                        <input
                            type="checkbox"
                            checked={rating.includes(rat)}
                            onChange={() => handleRating(rat)}
                        />
                        {rat} Star
                    </label>
                ))}
        </div>
            <ul className="list">
                {filterData().map(product => (
                    <li key={product.id} className="list-item">
                        <LazyLoadImage
                        className="image"
                        src={product.images[0]}
                        effect="blur"
                        />
                        <h2 className="title">{product.title}</h2>
                        <p className="description">{product.description}</p>
                        <p className="price">Price: ${product.price}</p>
                        <p className="rating">Rating: {product.rating}</p>
                        <Link to={`/product/${product.id}`}>
                            <button>Show Detail</button>
                        </Link>
                        <button onClick={() => handleAddToCart(product)}>Add to Cart</button>
                    </li>
                ))}
            </ul>
        </div>
  )
}


Product detail page

import { useEffect, useState } from "react";
import { useParams } from "react-router-dom";
import axios from 'axios';
const ProductDetail = () => {
    const { id } = useParams();
    const [product, setProduct] = useState(null);


    const fetchProduct = async () => {
        const response = await axios.get(`https://dummyjson.com/products/${id}`);
        setProduct(response.data);
    };


    useEffect(() => {
        fetchProduct();
    }, [id]);

    if (!product) return <div>Loading...</div>;

    return (
        <div className="product-detail">
            <h2 className="title">{product.title}</h2>
            <div className="content">
                <img src={product.images[0]} alt={product.title} className="large-image" />
                <div className="details">
                    <p>{product.description}</p>
                    <p className="price">Price: ${product.price}</p>
                    <p className="rating">Rating: {product.rating}</p>
                    <p className="category">Category: {product.category}</p>
                    <p className="brand">Brand: {product.brand}</p>
                </div>
            </div>
        </div>
    );
};

export default ProductDetail;


Que 3. Implement searching and sorting functionalities for the records.

Ans 3. 


import { useState, useEffect } from "react"
import axios from 'axios'
import { LazyLoadImage } from 'react-lazy-load-image-component';
import 'react-lazy-load-image-component/src/effects/blur.css';
import { Link } from "react-router-dom";

export default function Data() {
    const [products, setproducts] = useState([]);
    const [search, setsearch] = useState('');
    const [sortdata, setsortdata] = useState('')
    const [rating,setrating] = useState([]);

    const fetch = async()=>{
        let response = await axios.get('https://dummyjson.com/products')
        setproducts(response.data.products); 
        console.log(response.data.products);
    }

    const filterData = () => {
        return products
            .filter((elem) => 
                elem.title.toLowerCase().includes(search.toLowerCase())
            )
            .filter((elem)=> rating.length === 0 || rating.includes(Math.round(elem.rating)))
            .sort(sortproducts);
    };

    const sortproducts = (a,b) => {
        if(sortdata === "ace"){
            return a.price - b.price;
        }else if(sortdata === "dec"){
            return b.price - a.price;
        }
        return 0;
    }


    const handleRating = (rat) => {
        setrating((prev) => 
            prev.includes(rat) ? prev.filter((r) => r !== rat) : [...prev, rat]
        );
    };

    useEffect(()=>{
        fetch();
    },[]);
  return (
    <div className="container data">
        <input
            type="text"
            placeholder="search the text"
            value={search}
            onChange={(e) => setsearch(e.target.value)}
        />
        <div>
            <button onClick={()=>setsortdata("ace")}>low to high</button>
            <button onClick={()=>setsortdata("dec")}>high to low</button>
        </div>
        <div className="rating-filters">
                {[1, 2, 3, 4, 5].map((rat) => (
                    <label key={rat}>
                        <input
                            type="checkbox"
                            checked={rating.includes(rat)}
                            onChange={() => handleRating(rat)}
                        />
                        {rat} Star
                    </label>
                ))}
        </div>
            <ul className="list">
                {filterData().map(product => (
                    <li key={product.id} className="list-item">
                        <LazyLoadImage
                        className="image"
                        src={product.images[0]}
                        effect="blur"
                        />
                        <h2 className="title">{product.title}</h2>
                        <p className="description">{product.description}</p>
                        <p className="price">Price: ${product.price}</p>
                        <p className="rating">Rating: {product.rating}</p>
                        <Link to={`/product/${product.id}`}>
                            <button>Show Detail</button>
                        </Link>
                        <button onClick={() => handleAddToCart(product)}>Add to Cart</button>
                    </li>
                ))}
            </ul>
        </div>
  )
}



Que 4. Store user details in session storage after login, and display product details accordingly.

Ans 4.

import { useState } from "react";

const UserForm = () => {
    const [username, setUsername] = useState("");
    const [password, setPassword] = useState("");
    const [email, setEmail] = useState("");
    const [phoneNumber, setPhoneNumber] = useState("");

    const handleSubmit = (e) => {
        e.preventDefault();
        const userDetails = { username, password, email, phoneNumber };
        localStorage.setItem("userDetails", JSON.stringify(userDetails));
        console.log(userDetails);
        alert("User details saved!");
        setUsername("");
        setPassword("");
        setEmail("");
        setPhoneNumber("");
    };

    return (
        <div className="form-container">
            <h2>Log In</h2>
            <form onSubmit={handleSubmit} className="user-form">
                <div className="form-group">
                    <label>Username:</label>
                    <input
                        type="text"
                        value={username}
                        onChange={(e) => setUsername(e.target.value)}
                        required
                    />
                </div>
                <div className="form-group">
                    <label>Password:</label>
                    <input
                        type="password"
                        value={password}
                        onChange={(e) => setPassword(e.target.value)}
                        required
                    />
                </div>
                <div className="form-group">
                    <label>Email:</label>
                    <input
                        type="email"
                        value={email}
                        onChange={(e) => setEmail(e.target.value)}
                        required
                    />
                </div>
                <div className="form-group">
                    <label>Phone Number:</label>
                    <input
                        type="tel"
                        value={phoneNumber}
                        onChange={(e) => setPhoneNumber(e.target.value)}
                        required
                    />
                </div>
                <button type="submit" className="submit-button">Submit</button>
            </form>
        </div>
    );
};

export default UserForm;
